	# DTO(Data Transfer Object)

-데이터 교환을 하기 위해 사용하는 객체 (자바 빈즈(Java Beans))
-로직을 가지지 않는 순수한 데이터 객체(getter & setter 만 가진 클래스)입니다.
-setter를 갖고있어, 값이 변할 수 있다.
-DB의 데이터를 Service나 Controller 등으로 보낼 때 사용하는 객체. 
 즉,DB의 데이터가 Presentation Logic Tier로 넘어올때는 DTO로 변환되어 오고가는 것이다.

이용 이유
 : 프로세스 간의 커뮤니케이션이 주로 개별 호출이 부담스러운 작업일 경우가 많은 원격 인터페이스에 의해 이루어지기 때문이다.
  대부분의 개별 호출이 클라이언트와 서버 간의 왕복 시간을 소모하기 때문에, 호출 횟수를 줄이는 방법 중 하나는
  몇 번의 호출에 의해 전송될 데이터를 모으는 DTO를 이용해서 한번만 호출하는 것이다.


	# VO(Value Object)

-DTO와 비슷하지만 차이점은 VO는 read only 속성을 갖는다.
-관계 데이터 베이스의 레코드에 대응되는 자바 클래스이다. (레코드 = row 한 줄)
-형태 : db 레코드를 구성하는 필드(=컬럼)들을 VO의 Attribute로 하고 해당 변수에 접근할 수 있는 
  Getter, Setter 메소드의 조합으로 클래스가 형성
-특성 : 불변성, equlas()로 비교할 때 객체의 모든 값을 비교해야 한다.
-예를 들면 빨강은 Color.RED, 초록은 Color.GREEN 이렇게 단순히 값만 표현하기 위해 getter기능만 존재한다.
-프로그램의 사용자가 화면에서 어떤 데이터를 입력하거나 조회 요청이 왔을 때 입력된 데이터나 조회하는 조건을 
 VO에 담아서 DAO에 요청하면 DAO는 저장소(일반적으로 Database )로부터 데이터를 입력하거나 
 조회한 후 그 결과를 돌려준다.


	# DAO(Data Access Object)
 # 저장소와 관련된 클래스를 의미한다. (DataBase)
 # 파일에 저장된 데이터를 읽는 용도의 코드를 모아놓은 클래스
 # DataBase, File
 # 자바에서는 List, Set, Map




