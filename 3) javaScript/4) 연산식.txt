			## 연산식

-연산이란 "식이 나타내는 일정한 규칙에 따라 계산"을 뜻한다.

-사용자는 자바 스크립트를 통해 연산을 처리하는 식을 만들 수 있고 여기에 사용하는 기호를 연산자라고 한다.
 


	# 산술 연산

# +, -, *, /, %를 사용한 계산을 의미한다.

# 두 개의 피 연산자를 받아서 하나의 숫자 데이터를 결과로 반환한다.

=========================================================================
     의미	| 연산자	 |							|
-------------------------------------------------------------------------
# 더하기	|    +	 |		2 + 2는 4를 return(반환)			|
-------------------------------------------------------------------------
# 빼기	|    -	 |		5 - 2는 3을 return(반환)			|
-------------------------------------------------------------------------
# 곱하기	|    *	 |		3 * 2는 6을 return(반환)			|
-------------------------------------------------------------------------
# 나누기	|    / 	 |		10 / 5는 2를 return(반환)			|
-------------------------------------------------------------------------
# 나머지	|    %	 |		12 % 5는 2를 return(반환)			|
=========================================================================

-산술 연산을 처리하는 식을 사용하면 해당 식은 연산 결과를 return(반환)한다. 즉 식이 데이터로 대체된다.


let number = 3 + 3;	====>	   let number = 6;




let result = 1 + 1;
console.log(result);

result = 5 - 2;
console.log(result);

result = 7 * 3;
console.log(result);

result = 10 / 2;
console.log(result);

result = 10 % 3;
console.log(result);






	# 대입 연산

-대입연산은 오른쪽의 피연산자를 데이터의 왼쪽 피연산자에게 대입한다.
-왼쪽 피연산자로는 주로 변수나 상수가 자리하며, 오른쪽 피연산자로는 데이터 또는 데이터 반환식이 자리한다.

=========================================================================
     의미		|    연산자	|						|
-------------------------------------------------------------------------
# 대입하기		|    a = b		| 값 b를  변수 a에 대입			|
-------------------------------------------------------------------------
# 더하여 대입	|    a += b	| 변수 a의 값에 b를 더한 결과를 변수 a에 대입	|
-------------------------------------------------------------------------
# 빼서 대입	|    a -= b	| 변수 a의 값에 b를 뺀한 결과를 변수 a에 대입	|
-------------------------------------------------------------------------
# 곱하여 대입	|    a *= b		| 변수 a의 값에 b를 곱한 결과를 변수 a에 대입	|
------------------------------------------------------------------------
# 나누어 대입	|    a /= b		| 변수 a의 값에 b를 나눈 결과를 변수 a에 대입		|
=========================================================================


let num1 = 3;
let num2 = 5;

// = : 대입 연산자(오른쪽의 값을 왼쪽의 변수에 대입)
console.log(num1);
console.log(num2);

num1 = num2;
console.log(num1);
console.log(num2);

let num3 = 4;
num3 = num3 + 3;
console.log(num3);

let num4 = 2;
num4 += 5;  // num4 = num4 + 5;
console.log(num4);

let num5 = 8;
num5 -= 3;  // num5 = num5 - 3
console.log(num5);

let num6 = 4;
num6 *= 4;  // num6 = num6 * 4
console.log(num6);

let num7 = 10;
num7 /= 2;
console.log(num7);

let number1 = 10;
let number2 = 20;
console.log(number1 + number2 + ' = 얼마일까?');
console.log('연산 : ' + number1 + number2);     // 연산 : 1020
console.log('연산 : ' + (number1 + number2));   // 연산 : 30	









	# 연산자 우선순위

-하나의 구문에 여러개의 연산자가 함께 사용되는 경우 연산자 우선순위가 반영되 우선순위가 높은것부터 계산된다.

-곱하기, 나누기가 더하기, 빼기보다 우선순위가 높다
ex) 1 + 3 * 2 - 2 = 5


-대입연산은 대입 연산자 오른쪽에 있는 식보다 무조건 나중에 처리된다.

ex) 변수 = 1 + 3 + 2;




let result = 1 + 2 + 3 + 4 + 5;
window.console.log(result);

result = 2 + 3 * 5 - 4;
window.console.log(result);

result = 2 + (3 * 5) - 4;   // 권장사항 (결과는 동일하지만 가독성을 위해서 소괄호를 사용)
window.console.log(result);

// 특정 연산을 우선처리하려면 소괄호를 사용할 수 있다.
result = 2 + 3 * (5 - 4);
window.console.log(result);

// 대입연산자의 우선순위가 가장 낮다(증감연산자 제외)
result = 2 + 8 / 4 *3 + 5;
window.console.log(result);



















