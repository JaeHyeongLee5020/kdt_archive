				## 코드 실행 흐름 제어 

-자바 프로그램을 시작하면 main() 메소드의 시작 중괄호 { 에서 시작해서 끝 중괄호 } 까지 
 위에서 부터 아래로 실행하는 흐름을 가지고 있다.    
 이러한 실행 흐름을 개발자가 원하는 방향으로 바꿀 수있도록 해주는 것이 흐름 제어문이다. 
-흐름 제어문을 간단히 제어문이라고 한다. 
-제어문은 조건식과 중괄호 { }블록으로 구성되는데 조건식의 연산 결과에 따라 블록 내부의 실행 여부가 결정된다. 
-흐름 제어문을 사용할 경우 다양한 실행 흐름이 생성된다는 것을 다음 그림에서 보여주고 있다.

                            

-제어문의 종류는 조건문과 반복문이 있다
 # 조건문 : if문, switch문
 # 반복문 : for문, while문, do-while문

-제어문 블록이 실행 완료되었을 경우 다시 제어문 처음으로 돌아갈지, 
 아니면 제어문 블록을 빠져나와 정상 흐름으로 다시 돌이올지는 어떤 제어문을 사용하는냐에 달려 있다. 
-조건문일 경우는 정상 흐름으로 돌아오지만 반복문일 경우는 제어문 처음으로 다시 되돌아가 반복 실행한다. 
 이것을 루핑 (looping) 이라고 한다. 제어문 블록 내부에는 또 다른 제어문을사용할 수 있다.    
-if문 내부에 for문을 가질 수 있고, while문도 가질 수 있다. 
 그렇기 때문에 개발자가 원히는 매우 복잡한 흐름 제어도 가능하다.





==========================================================================================

			## 조건문(if문 , switch문)


		# if문

-if문은 조건식의 결과에 따라 블록실행 여부가 결정된다. 
-다음은 if문의 형식과 실행 흐름을 보여준다.
            
-조건식에는 true또는 false 값을 산출할 수 있는 연산식이나. boolean 변수가 올 수 있다. 
-조건식이 true이면 블록을 실행하고 false이면 블록을 실행하지 않는다.

기본 형식

	if(조건식) {	// 조건식에는 비교연산자, 논리연산자 즉 true, false가 나와야 한다.
		실행문
		실행문
	}




	if(조건식)		// 조건식이 1개인경우에는 코드블럭을 생략할수 있지만 생략하지 않는다.
		실행문

-중괄호 { }블록은 여러 개의 실행문을 하나로 묶기 위해 작성된다. 
-만약 조건식이 true가 될 때 실행해야 할 문장이 하나 밖에 없다면 생략할 수 있다. 
 하지만 중괄호 { }블록을 생략하지 않고 작성하는 것을 추천한다. 
-중괄호 블록을 작성하지 않으면 코드의 가독성(코드 해석)이 좋지 않고, 버그 발생 의 원인이 될 수 있다. 




public class IfElseExample01 {
	public static void main(String[] args) {
		
		int a = 10;
		
		System.out.println("프로그램 시작");
		
		if(a < 0)	{
			System.out.println("0보다 크다.");
		}

		System.out.println("프로그램 종료");
	}
}










public class IfElseExample02 {
	public static void main(String[] args) {
		
		int score = 83;
		
		if(score >= 60) {
			System.out.println("60점 이상입니다.");
			System.out.println("합격처리 되었습니다.");
		}
		
		if(score < 60) {
			System.out.println("60점 미만입니다.");
			System.out.println("불합격입니다.");
		}
		
		
		// IF-ELSE문을 사용하여 2개의 구문을 하나의 구문으로 사용할 수 있다.
		if(score >= 60) {
			System.out.println("60점 이상입니다.");
			System.out.println("합격처리 되었습니다.");
		} else {
			System.out.println("60점 미만입니다.");
			System.out.println("불합격입니다.");
		}
		
	}
}



==========================================================================================

		# if-else문

if문은 else 블록과 함께 사용되어 조건식의 결과에 따라 실행 블록을 선택한다. if문의 조건식이 
true이면 if문의 블록이 실행되고 조건식이 false이면 else 블록이 실행된다. 
조건식의 결과에 따라 이 두 개의 블록 중 어느 한 블록의 내용만 실행하고 전체 if문을 벗어나게 된다. 
다음은 if-else문의 형식과 실행 흐름을 보여준다.

           

if-else문으로 간단히 처리하는 것이 더욱 간결한 코딩이 된다.

# else 문은 if 문에서 만족하는 조건이 없을 때 실행하는 코드를 제공한다.
# else 문을 사용하면 앞서 진행했던 프로그램을 다음과 같이 더 간략하게 바꿀 수도 있다.

# 기존: 만약 18살 이상이면 "성인입니다"를 출력하고, 
  만약 18살 미만이라면 "미성년자입니다."를 출력해야 한다.

# 변경: 만약 18살 이상이면 "성인입니다"를 출력하고, 그렇지 않으면 "미성년자입니다."를 출력해야 한다.
# 쉽게 이야기해서 18살이 넘으면 성인이고, 그렇지 않으면 모두 미성년자이다.


public class IfElseExample03 {

	public static void main(String[] args) {
		
		int a = 20;
		
		if((a > 0) && (a < 100)) {
			System.out.println("크다");
		} else {
			System.out.println("작다");
		}
		
		int b = 12;
		
		// 2의배수 이면서 3의배수
		if((b % 2 == 0) && (b % 3 == 0)) {
			System.out.println("2의배수 이면서 3의배수 입니다.");
		} else {
			System.out.println("2와 3의 배수가 아닙니다.");
		}
	}
}












==========================================================================================

		# if-else if-else문

조건문이 여러 개인 if문도 있다.   
처음 if문의 조건식이 false 일 경우 다른 조건식의 결과에 따라 실행 블록을 선택할 수 있는데,
if 블록의 끝에 else if문을 붙이면 된다. 
else if문의 수는 제한이 없으며 여러 개의 조건식 중 true가 되는 블록만 실행하고 전체 if문을 벗어나게 된다. 
else if 블록의 마지막에는 else 블록을 추가할 수 있는데,
모든 조건식이 false 일 경우 else 블록을 실행하고 if문을 벗어나게 된다. 
다음은 if-else if-else문의 형식과 실행 흐름을 보여준다.

-당신은 연령에 따라 다른 메시지를 출력하는 프로그램을 작성해야 한다.
-이 프로그램은 int age 라는 변수를 사용해야 하며, 연령에 따라 다음의 출력을 해야 한다.
-7세 이하일 경우: "미취학"
-8세 이상 13세 이하일 경우	: "초등학생" 출력
-14세 이상 16세 이하일 경우	: "중학생" 출력
-17세 이상 19세 이하일 경우	: "고등학생" 출력
-20세 이상일 경우: "성인"
-if 문을 사용해서 코드를 작성해보자.

public class IfElseExample04 {
	public static void main(String[] args) {
		
		int age = 18;
		
		if(age <= 7) {
			System.out.println("미취학 어린이 입니다.");
		} else if(age <= 13) {
			System.out.println("초등학생입니다.");
		} else if(age <= 16) {
			System.out.println("중학생입니다.");
		} else if(age <= 19) {
			System.out.println("고등학생입니다.");
		} else {
			System.out.println("성인입니다.");
		}
	}
}



	# if-else if-else문 예제3

-당신은 점수에 따라 다른 메시지를 출력하는 프로그램을 작성해야 한다.
-이 프로그램은 점수에 따라 다음의 출력을 해야 한다.
-점수가 100~90	: 당신의 점수는 x점이고  학점은 A입니다.
-점수가 80~89	: 당신의 점수는 x점이고  학점은 B입니다.
-점수가 70~79	: 당신의 점수는 x점이고  학점은 C입니다.
-점수가 60~69 	: 당신의 점수는 x점이고  학점은 D입니다.
-점수가 60미만 	: 당신의 점수는 x점이고  학점은 F입니다.
-100점 초과	: 잘못된 점수입니다.


public class IfElseExample04 {
	public static void main(String[] args) {

		int score = 101;
		
		if(score > 100) {
			System.out.println(score + "점은 잘못된 점수입니다.");
		} else if(score >= 90) {
			System.out.println("당신의 점수는 " + score + "점이고  학점은 A입니다.");
		} else if(score >= 80) {
			System.out.println("당신의 점수는 " + score + "점이고  학점은 B입니다.");
		} else if(score >= 70) {
			System.out.println("당신의 점수는 " + score + "점이고  학점은 C입니다.");
		} else if(score >= 60) {
			System.out.println("당신의 점수는 " + score + "점이고  학점은 D입니다.");
		} else {
			System.out.println("당신의 점수는 " + score + "점이고  학점은 F입니다.");
		}
	}
}







EX) 조건에 맞게 if-else if-else문을 작성하시오
-변수에 나이를 대입시 각 나이에 맞게 입장료가 출력되는 if-else if-else문을 작성하시오
-작성시 필요하면 변수는 더 만들어도 된다.

-미취학 아동입니다. (0살 ~ 7살)
-입장료는 0원입니다.

-초등학생입니다. (8살 ~ 13살)
-입장료는 1000원입니다.

-중학생입니다. (14살 ~ 16살)
-입장료는 3000원입니다.

-고등학생입니다. (17살 ~ 19살)
-입장료는 5000원입니다.

-성인입니다.
-입장료는 10000원입니다.


public class IfElseExample05 {
	public static void main(String[] args) {
		int age = 18;
		int charge = 0;
		String str = "";
		
		if(age <= 7) {
			str = "미취학 어린이";
			charge = 0;
		} else if(age <= 13) {
			str = "초등학생";
			charge = 1000;
		} else if(age <= 16) {
			str = "중학생";
			charge = 3000;
		} else if(age <= 19) {
			str = "고등학생";
			charge = 5000;
		} else {
			str = "성인";
			charge = 10000;
		}
		System.out.println(str + " 입니다.");
		System.out.println("입장료는 " + charge + "원 입니다.");
	}
}



















